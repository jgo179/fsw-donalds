generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Restaurant {
  id             String   @id @default(uuid())
  name           String
  slug           String
  description    String
  avatarImageUrl String
  coverImageUrl  String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  menuCategories MenuCategory[]
  products       Product[]
  orders         Order[]
}

model MenuCategory {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  restaurantId String
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id], onDelete: Cascade)

  products Product[]
}

model Product {
  id          String   @id @default(uuid())
  name        String
  description String
  price       Float
  imageUrl    String
  ingredients String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  restaurantId String
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id], onDelete: Cascade)

  menuCategoryId String
  menuCategory   MenuCategory @relation(fields: [menuCategoryId], references: [id], onDelete: Cascade)

  orderProducts OrderProduct[]
}

model Order {
  id                Int               @id @default(autoincrement())
  total             Float
  status            OrderStatus
  consumptionMethod ConsumptionMethod
  customerName      String
  customerCpf       String
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt

  restaurantId String
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id], onDelete: Cascade)

  orderProducts OrderProduct[]
}

model OrderProduct {
  id        String   @id @default(uuid())
  quantity  Int
  price     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  productId String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  orderId Int
  order   Order @relation(fields: [orderId], references: [id], onDelete: Cascade)
}

enum OrderStatus {
  PENDING
  IN_PREPARATION
  PAYMENT_CONFIRMED
  PAYMENT_FAILED
  FINISHED
}

enum ConsumptionMethod {
  TAKEAWAY
  DINE_IN
}
